on:
  push:
    branches:
      - rzadp/mdbook
      - rzadp/book

jobs:
  mdbook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          mkdir -p mdbook/src/proposed
          mkdir -p patches/text
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.READ_FELLOWS_TOKEN }}
          script: |
            const owner = 'polkadot-fellows'
            const repo = 'RFCs'
            const prs = await github.paginate(github.rest.pulls.list, {owner, repo, state: 'open'})
            console.log(`Found ${prs.length} PRs.`)

            for (const pr of prs) {
              const addedMarkdownFiles = (
                await github.rest.pulls.listFiles({
                  owner, repo,
                  pull_number: pr.number,
                })
              ).data.filter(
                (file) => file.status === "added" && file.filename.startsWith("text/") && file.filename.includes(".md"),
              );
              if (addedMarkdownFiles.length !== 1) continue;
              const [rfcFile] = addedMarkdownFiles;
              console.log(rfcFile)
              // The git patches seems to be the only thing available right away.
              // The alternative would be to download the file contents but that adds API calls.
              // The patch in this object is not a full patch with valid syntax, so we need to modify it a bit - add a header.
              const patch = `--- /dev/null\n+++ b/patches/${rfcFile.filename}\n` + rfcFile.patch + "\n"
              require('fs').writeFileSync(`patches/${rfcFile.filename}.patch`, patch)
            }
      - run: |
          ls -l patches/text
          for f in ./patches/text/*.patch;
          do
            git apply $f
          done;
          mv patches/text/*.md mdbook/src/proposed

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@adeb05db28a0c0004681db83893d56c0388ea9ea # v1.2.0
        with:
          mdbook-version: '0.4.35'
      
      - run: mdbook/book.sh
